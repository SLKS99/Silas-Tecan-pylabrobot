"""
________________________________________________________________________

:PROJECT: SiLA2_python

*Fluent Service*

:details: SilaFluentController:
    A service to send Commands to Fluent

:file:    SilaFluentController_simulation.py
:authors: Clemens Klein

:date: (creation)          2020-02-17T13:47:52.475075
:date: (last modification) 2020-02-17T13:47:52.475075

.. note:: Code generated by sila2codegenerator 0.2.0

________________________________________________________________________

**Copyright**:
  This file is provided "AS IS" with NO WARRANTY OF ANY KIND,
  INCLUDING THE WARRANTIES OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.

  For further Information see LICENSE file that comes with this distribution.
________________________________________________________________________
"""

__version__ = "0.1.0"

# import general packages
import logging
import time         # used for observables
import uuid         # used for observables
import grpc         # used for type hinting only

# import SiLA2 library
import sila2lib.framework.SiLAFramework_pb2 as silaFW_pb2

# import gRPC modules for this feature
from .gRPC import SilaFluentController_pb2 as SilaFluentController_pb2
# from .gRPC import SilaFluentController_pb2_grpc as SilaFluentController_pb2_grpc

# import default arguments
from .SilaFluentController_default_arguments import default_dict


# noinspection PyPep8Naming,PyUnusedLocal
class SilaFluentControllerSimulation:
    """
    Implementation of the *Fluent Service* in *Simulation* mode
        This is a python client for Fluent
    """

    def __init__(self):
        """Class initialiser"""

        logging.debug('Started server in mode: {mode}'.format(mode='Simulation'))

    def _get_command_state(self, command_uuid: str) -> silaFW_pb2.ExecutionInfo:
        """
        Method to fill an ExecutionInfo message from the SiLA server for observable commands

        :param command_uuid: The uuid of the command for which to return the current state

        :return: An execution info object with the current command state
        """

        #: Enumeration of silaFW_pb2.ExecutionInfo.CommandStatus
        command_status = silaFW_pb2.ExecutionInfo.CommandStatus.waiting
        #: Real silaFW_pb2.Real(0...1)
        command_progress = None
        #: Duration silaFW_pb2.Duration(seconds=<seconds>, nanos=<nanos>)
        command_estimated_remaining = None
        #: Duration silaFW_pb2.Duration(seconds=<seconds>, nanos=<nanos>)
        command_lifetime_of_execution = None

        # TODO: check the state of the command with the given uuid and return the correct information

        # just return a default in this example
        return silaFW_pb2.ExecutionInfo(
            commandStatus=command_status,
            progressInfo=(
                command_progress if command_progress is not None else None
            ),
            estimatedRemainingTime=(
                command_estimated_remaining if command_estimated_remaining is not None else None
            ),
            updatedLifetimeOfExecution=(
                command_lifetime_of_execution if command_lifetime_of_execution is not None else None
            )
        )

    def AddLabware(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.AddLabware_Responses:
        """
        Executes the unobservable command "AddLabware"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.Barcode (Barcode): None
            request.HasLid (HasLid): None
            request.LabwareName (LabwareName): None
            request.LabwareType (LabwareType): None
            request.TargetLocation (TargetLocation): None
            request.Position (Position): None
            request.Rotation (Rotation): None
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command AddLabware here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.AddLabware_Responses(
                **default_dict['AddLabware_Responses']
            )
    
        return return_value
    
    
    def RemoveLabware(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.RemoveLabware_Responses:
        """
        Executes the unobservable command "RemoveLabware"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.LabwareName (LabwareName): None
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command RemoveLabware here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.RemoveLabware_Responses(
                **default_dict['RemoveLabware_Responses']
            )
    
        return return_value
    
    
    def SetLocation(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.SetLocation_Responses:
        """
        Executes the unobservable command "SetLocation"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.Labware (Labware): None
            request.Rotation (Rotation): None
            request.TargetLocation (TargetLocation): None
            request.TargetSite (TargetSite): None
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command SetLocation here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.SetLocation_Responses(
                **default_dict['SetLocation_Responses']
            )
    
        return return_value
    
    
    def Subroutine(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.Subroutine_Responses:
        """
        Executes the unobservable command "Subroutine"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.SubroutineName (SubroutineName): None
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command Subroutine here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.Subroutine_Responses(
                **default_dict['Subroutine_Responses']
            )
    
        return return_value
    
    
    def TransferLabware(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.TransferLabware_Responses:
        """
        Executes the unobservable command "TransferLabware"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.LabwareToLocation (LabwareToLocation): None
            request.OnlyUseSelectedSite (OnlyUseSelectedSite): None
            request.TargetLocation (TargetLocation): None
            request.TargetPosition (TargetPosition): None
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command TransferLabware here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.TransferLabware_Responses(
                **default_dict['TransferLabware_Responses']
            )
    
        return return_value
    
    
    def TransferLabwareBackToBase(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.TransferLabwareBackToBase_Responses:
        """
        Executes the unobservable command "TransferLabwareBackToBase"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.LabwareName (LabwareName): None
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command TransferLabwareBackToBase here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.TransferLabwareBackToBase_Responses(
                **default_dict['TransferLabwareBackToBase_Responses']
            )
    
        return return_value
    
    
    def GenericCommand(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.GenericCommand_Responses:
        """
        Executes the unobservable command "GenericCommand"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.Content (Content): None
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command GenericCommand here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.GenericCommand_Responses(
                **default_dict['GenericCommand_Responses']
            )
    
        return return_value
    
    
    def GetFingers(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.GetFingers_Responses:
        """
        Executes the unobservable command "GetFingers"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.DeviceAlias (DeviceAlias): None
            request.GripperFingers (GripperFingers): None
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command GetFingers here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.GetFingers_Responses(
                **default_dict['GetFingers_Responses']
            )
    
        return return_value
    
    
    def DropFingers(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.DropFingers_Responses:
        """
        Executes the unobservable command "DropFingers"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.DeviceAlias (DeviceAlias): None
            request.DockingStation (DockingStation): None
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command DropFingers here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.DropFingers_Responses(
                **default_dict['DropFingers_Responses']
            )
    
        return return_value
    
    
    def UserPrompt(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.UserPrompt_Responses:
        """
        Executes the unobservable command "UserPrompt"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.Text (Text): None
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command UserPrompt here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.UserPrompt_Responses(
                **default_dict['UserPrompt_Responses']
            )
    
        return return_value
    
    
    def GetTips(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.GetTips_Responses:
        """
        Executes the unobservable command "GetTips"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.AirgapVolume (AirgapVolume): None
            request.AirgapSpeed (AirgapSpeed): None
            request.DiTiType (DiTiType): None
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command GetTips here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.GetTips_Responses(
                **default_dict['GetTips_Responses']
            )
    
        return return_value
    
    
    def Aspirate(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.Aspirate_Responses:
        """
        Executes the unobservable command "Aspirate"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.Volume (Volume): None
            request.Labware (Labware): None
            request.LiquidClass (LiquidClass): None
            request.WellOffset (WellOffset): None
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command Aspirate here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.Aspirate_Responses(
                **default_dict['Aspirate_Responses']
            )
    
        return return_value
    
    
    def Dispense(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.Dispense_Responses:
        """
        Executes the unobservable command "Dispense"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.Volume (Volume): None
            request.Labware (Labware): None
            request.LiquidClass (LiquidClass): None
            request.WellOffset (WellOffset): None
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command Dispense here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.Dispense_Responses(
                **default_dict['Dispense_Responses']
            )
    
        return return_value
    
    
    def DropTips(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.DropTips_Responses:
        """
        Executes the unobservable command "DropTips"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.Labware (Labware): None
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command DropTips here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.DropTips_Responses(
                **default_dict['DropTips_Responses']
            )
    
        return return_value
    
    
    def StartFluentOrAttach(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.StartFluentOrAttach_Responses:
        """
        Executes the unobservable command "StartFluentOrAttach"
            Starts Fluent or connects to an instance already running
    
        :param request: gRPC request containing the parameters passed:
            request.EmptyParameter (Empty Parameter): An empty parameter data type used if no parameter is required.
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command StartFluentOrAttach here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.StartFluentOrAttach_Responses(
                **default_dict['StartFluentOrAttach_Responses']
            )
    
        return return_value
    
    
    def StartFluentAndLogin(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.StartFluentAndLogin_Responses:
        """
        Executes the unobservable command "StartFluentAndLogin"
            Starts Fluent or connects to an instance already running
    
        :param request: gRPC request containing the parameters passed:
            request.Username (Username): None
            request.Password (Password): None
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command StartFluentAndLogin here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.StartFluentAndLogin_Responses(
                **default_dict['StartFluentAndLogin_Responses']
            )
    
        return return_value
    
    
    def StartFluentInSimulationMode(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.StartFluentInSimulationMode_Responses:
        """
        Executes the unobservable command "StartFluentInSimulationMode"
            Starts Fluent or connects to an instance already running
    
        :param request: gRPC request containing the parameters passed:
            request.EmptyParameter (Empty Parameter): An empty parameter data type used if no parameter is required.
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command StartFluentInSimulationMode here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.StartFluentInSimulationMode_Responses(
                **default_dict['StartFluentInSimulationMode_Responses']
            )
    
        return return_value
    
    
    def PrepareMethod(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.PrepareMethod_Responses:
        """
        Executes the unobservable command "PrepareMethod"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.ToPrepare (ToPrepare): None
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command PrepareMethod here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.PrepareMethod_Responses(
                **default_dict['PrepareMethod_Responses']
            )
    
        return return_value
    
    
    def RunMethod(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.RunMethod_Responses:
        """
        Executes the unobservable command "RunMethod"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.EmptyParameter (Empty Parameter): An empty parameter data type used if no parameter is required.
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command RunMethod here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.RunMethod_Responses(
                **default_dict['RunMethod_Responses']
            )
    
        return return_value
    
    
    def PauseRun(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.PauseRun_Responses:
        """
        Executes the unobservable command "PauseRun"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.EmptyParameter (Empty Parameter): An empty parameter data type used if no parameter is required.
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command PauseRun here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.PauseRun_Responses(
                **default_dict['PauseRun_Responses']
            )
    
        return return_value
    
    
    def ResumeRun(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.ResumeRun_Responses:
        """
        Executes the unobservable command "ResumeRun"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.EmptyParameter (Empty Parameter): An empty parameter data type used if no parameter is required.
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command ResumeRun here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.ResumeRun_Responses(
                **default_dict['ResumeRun_Responses']
            )
    
        return return_value
    
    
    def StopMethod(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.StopMethod_Responses:
        """
        Executes the unobservable command "StopMethod"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.EmptyParameter (Empty Parameter): An empty parameter data type used if no parameter is required.
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command StopMethod here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.StopMethod_Responses(
                **default_dict['StopMethod_Responses']
            )
    
        return return_value
    
    
    def FinishExecution(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.FinishExecution_Responses:
        """
        Executes the unobservable command "FinishExecution"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.EmptyParameter (Empty Parameter): An empty parameter data type used if no parameter is required.
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command FinishExecution here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.FinishExecution_Responses(
                **default_dict['FinishExecution_Responses']
            )
    
        return return_value
    
    
    def CloseMethod(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.CloseMethod_Responses:
        """
        Executes the unobservable command "CloseMethod"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.EmptyParameter (Empty Parameter): An empty parameter data type used if no parameter is required.
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command CloseMethod here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.CloseMethod_Responses(
                **default_dict['CloseMethod_Responses']
            )
    
        return return_value
    
    
    def SetVariableValue(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.SetVariableValue_Responses:
        """
        Executes the unobservable command "SetVariableValue"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.VariableName (VariableName): None
            request.Value (Value): None
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command SetVariableValue here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.SetVariableValue_Responses(
                **default_dict['SetVariableValue_Responses']
            )
    
        return return_value
    
    
    def GetVariableNames(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.GetVariableNames_Responses:
        """
        Executes the unobservable command "GetVariableNames"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.EmptyParameter (Empty Parameter): An empty parameter data type used if no parameter is required.
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.ReturnValue (ReturnValue): None
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command GetVariableNames here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.GetVariableNames_Responses(
                **default_dict['GetVariableNames_Responses']
            )
    
        return return_value
    
    
    def GetVariableValue(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.GetVariableValue_Responses:
        """
        Executes the unobservable command "GetVariableValue"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.VariableName (VariableName): None
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.ReturnValue (ReturnValue): None
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command GetVariableValue here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.GetVariableValue_Responses(
                **default_dict['GetVariableValue_Responses']
            )
    
        return return_value
    
    
    def GetAllRunnableMethods(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.GetAllRunnableMethods_Responses:
        """
        Executes the unobservable command "GetAllRunnableMethods"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.EmptyParameter (Empty Parameter): An empty parameter data type used if no parameter is required.
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.ReturnValue (ReturnValue): None
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command GetAllRunnableMethods here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.GetAllRunnableMethods_Responses(
                **default_dict['GetAllRunnableMethods_Responses']
            )
    
        return return_value
    
    
    def Shutdown(self, request, context: grpc.ServicerContext) \
            -> SilaFluentController_pb2.Shutdown_Responses:
        """
        Executes the unobservable command "Shutdown"
            ...
    
        :param request: gRPC request containing the parameters passed:
            request.Timeout (Timeout): None
        :param context: gRPC :class:`~grpc.ServicerContext` object providing gRPC-specific information
    
        :returns: The return object defined for the command with the following fields:
            request.EmptyResponse (Empty Response): An empty response data type used if no response is required.
        """
    
        # initialise the return value
        return_value = None
    
        # TODO:
        #   Add implementation of Simulation for command Shutdown here and write the resulting response
        #   in return_value
    
        # fallback to default
        if return_value is None:
            return_value = SilaFluentController_pb2.Shutdown_Responses(
                **default_dict['Shutdown_Responses']
            )
    
        return return_value
    

    
