# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import SilaFluentController_pb2 as SilaFluentController__pb2


class SilaFluentControllerStub(object):
    """Feature: Fluent Service
    Denotes a service to remote-control FluentControl
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddLabware = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/AddLabware',
                request_serializer=SilaFluentController__pb2.AddLabware_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.AddLabware_Responses.FromString,
                )
        self.RemoveLabware = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/RemoveLabware',
                request_serializer=SilaFluentController__pb2.RemoveLabware_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.RemoveLabware_Responses.FromString,
                )
        self.SetLocation = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/SetLocation',
                request_serializer=SilaFluentController__pb2.SetLocation_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.SetLocation_Responses.FromString,
                )
        self.Subroutine = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/Subroutine',
                request_serializer=SilaFluentController__pb2.Subroutine_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.Subroutine_Responses.FromString,
                )
        self.TransferLabware = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/TransferLabware',
                request_serializer=SilaFluentController__pb2.TransferLabware_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.TransferLabware_Responses.FromString,
                )
        self.TransferLabwareBackToBase = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/TransferLabwareBackToBase',
                request_serializer=SilaFluentController__pb2.TransferLabwareBackToBase_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.TransferLabwareBackToBase_Responses.FromString,
                )
        self.GenericCommand = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/GenericCommand',
                request_serializer=SilaFluentController__pb2.GenericCommand_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.GenericCommand_Responses.FromString,
                )
        self.GetFingers = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/GetFingers',
                request_serializer=SilaFluentController__pb2.GetFingers_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.GetFingers_Responses.FromString,
                )
        self.DropFingers = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/DropFingers',
                request_serializer=SilaFluentController__pb2.DropFingers_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.DropFingers_Responses.FromString,
                )
        self.UserPrompt = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/UserPrompt',
                request_serializer=SilaFluentController__pb2.UserPrompt_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.UserPrompt_Responses.FromString,
                )
        self.GetTips = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/GetTips',
                request_serializer=SilaFluentController__pb2.GetTips_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.GetTips_Responses.FromString,
                )
        self.Aspirate = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/Aspirate',
                request_serializer=SilaFluentController__pb2.Aspirate_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.Aspirate_Responses.FromString,
                )
        self.Dispense = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/Dispense',
                request_serializer=SilaFluentController__pb2.Dispense_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.Dispense_Responses.FromString,
                )
        self.DropTips = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/DropTips',
                request_serializer=SilaFluentController__pb2.DropTips_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.DropTips_Responses.FromString,
                )
        self.StartFluentOrAttach = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/StartFluentOrAttach',
                request_serializer=SilaFluentController__pb2.StartFluentOrAttach_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.StartFluentOrAttach_Responses.FromString,
                )
        self.StartFluentAndLogin = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/StartFluentAndLogin',
                request_serializer=SilaFluentController__pb2.StartFluentAndLogin_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.StartFluentAndLogin_Responses.FromString,
                )
        self.StartFluentInSimulationMode = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/StartFluentInSimulationMode',
                request_serializer=SilaFluentController__pb2.StartFluentInSimulationMode_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.StartFluentInSimulationMode_Responses.FromString,
                )
        self.PrepareMethod = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/PrepareMethod',
                request_serializer=SilaFluentController__pb2.PrepareMethod_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.PrepareMethod_Responses.FromString,
                )
        self.RunMethod = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/RunMethod',
                request_serializer=SilaFluentController__pb2.RunMethod_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.RunMethod_Responses.FromString,
                )
        self.PauseRun = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/PauseRun',
                request_serializer=SilaFluentController__pb2.PauseRun_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.PauseRun_Responses.FromString,
                )
        self.ResumeRun = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/ResumeRun',
                request_serializer=SilaFluentController__pb2.ResumeRun_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.ResumeRun_Responses.FromString,
                )
        self.StopMethod = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/StopMethod',
                request_serializer=SilaFluentController__pb2.StopMethod_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.StopMethod_Responses.FromString,
                )
        self.FinishExecution = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/FinishExecution',
                request_serializer=SilaFluentController__pb2.FinishExecution_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.FinishExecution_Responses.FromString,
                )
        self.CloseMethod = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/CloseMethod',
                request_serializer=SilaFluentController__pb2.CloseMethod_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.CloseMethod_Responses.FromString,
                )
        self.SetVariableValue = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/SetVariableValue',
                request_serializer=SilaFluentController__pb2.SetVariableValue_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.SetVariableValue_Responses.FromString,
                )
        self.GetVariableNames = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/GetVariableNames',
                request_serializer=SilaFluentController__pb2.GetVariableNames_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.GetVariableNames_Responses.FromString,
                )
        self.GetVariableValue = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/GetVariableValue',
                request_serializer=SilaFluentController__pb2.GetVariableValue_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.GetVariableValue_Responses.FromString,
                )
        self.GetAllRunnableMethods = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/GetAllRunnableMethods',
                request_serializer=SilaFluentController__pb2.GetAllRunnableMethods_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.GetAllRunnableMethods_Responses.FromString,
                )
        self.Shutdown = channel.unary_unary(
                '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/Shutdown',
                request_serializer=SilaFluentController__pb2.Shutdown_Parameters.SerializeToString,
                response_deserializer=SilaFluentController__pb2.Shutdown_Responses.FromString,
                )


class SilaFluentControllerServicer(object):
    """Feature: Fluent Service
    Denotes a service to remote-control FluentControl
    """

    def AddLabware(self, request, context):
        """Add Labware
        Adds new labware to the worktable
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveLabware(self, request, context):
        """Remove Labware
        Removes the labware with the given name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLocation(self, request, context):
        """Set Location
        Sets the location of the given labware
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subroutine(self, request, context):
        """Subroutine
        Starts a subroutine with the given name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferLabware(self, request, context):
        """Transfer Labware
        Transfers labware on the worktable with the RGA
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferLabwareBackToBase(self, request, context):
        """Transfer Labware Back To Base
        Transfers the given labware back to its base
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenericCommand(self, request, context):
        """Generic Command
        Executes a generic command
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFingers(self, request, context):
        """Get Fingers
        Gets the fingers of the gripper
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DropFingers(self, request, context):
        """Drop Fingers
        Drops the fingers to the provided docking station
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserPrompt(self, request, context):
        """User Prompt
        Shows a user prompt on TouchTools
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTips(self, request, context):
        """Get Tips
        Gets tips
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Aspirate(self, request, context):
        """Aspirate
        Aspirates liquid
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Dispense(self, request, context):
        """Dispense
        Dispenses liquid
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DropTips(self, request, context):
        """Drop Tips
        Drops the currently mounted disposable tips to the provided labware
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartFluentOrAttach(self, request, context):
        """Start Fluent Or Attach
        Starts FluentControl or connect to an instance already running
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartFluentAndLogin(self, request, context):
        """Start Fluent And Login
        Starts FluentControl and log in or connect to an instance already running
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartFluentInSimulationMode(self, request, context):
        """Start Fluent In Simulation Mode
        Starts FluentControl in simulation mode
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrepareMethod(self, request, context):
        """Prepare Method
        Prepares the method for execution
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunMethod(self, request, context):
        """Run Method
        Runs the currently prepared method
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PauseRun(self, request, context):
        """Pause Run
        Pauses the currently run method
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResumeRun(self, request, context):
        """Resume Run
        Resumes method execution
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopMethod(self, request, context):
        """Stop Method
        Stops the method
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FinishExecution(self, request, context):
        """Finish Execution
        Finishes the execution of the current method
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseMethod(self, request, context):
        """Close Method
        Closes the current method
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetVariableValue(self, request, context):
        """Set Variable Value
        Sets the value of the given variable
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVariableNames(self, request, context):
        """Get Variable Names
        Gets a collection of variable names for the current method
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVariableValue(self, request, context):
        """Get Variable Value
        Gets the value of the provided variable
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllRunnableMethods(self, request, context):
        """Get All Runnable Methods
        Gets a collection of runnable methods
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Shutdown(self, request, context):
        """Shutdown
        Shuts down FluentControl
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SilaFluentControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddLabware': grpc.unary_unary_rpc_method_handler(
                    servicer.AddLabware,
                    request_deserializer=SilaFluentController__pb2.AddLabware_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.AddLabware_Responses.SerializeToString,
            ),
            'RemoveLabware': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveLabware,
                    request_deserializer=SilaFluentController__pb2.RemoveLabware_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.RemoveLabware_Responses.SerializeToString,
            ),
            'SetLocation': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLocation,
                    request_deserializer=SilaFluentController__pb2.SetLocation_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.SetLocation_Responses.SerializeToString,
            ),
            'Subroutine': grpc.unary_unary_rpc_method_handler(
                    servicer.Subroutine,
                    request_deserializer=SilaFluentController__pb2.Subroutine_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.Subroutine_Responses.SerializeToString,
            ),
            'TransferLabware': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferLabware,
                    request_deserializer=SilaFluentController__pb2.TransferLabware_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.TransferLabware_Responses.SerializeToString,
            ),
            'TransferLabwareBackToBase': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferLabwareBackToBase,
                    request_deserializer=SilaFluentController__pb2.TransferLabwareBackToBase_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.TransferLabwareBackToBase_Responses.SerializeToString,
            ),
            'GenericCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.GenericCommand,
                    request_deserializer=SilaFluentController__pb2.GenericCommand_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.GenericCommand_Responses.SerializeToString,
            ),
            'GetFingers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFingers,
                    request_deserializer=SilaFluentController__pb2.GetFingers_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.GetFingers_Responses.SerializeToString,
            ),
            'DropFingers': grpc.unary_unary_rpc_method_handler(
                    servicer.DropFingers,
                    request_deserializer=SilaFluentController__pb2.DropFingers_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.DropFingers_Responses.SerializeToString,
            ),
            'UserPrompt': grpc.unary_unary_rpc_method_handler(
                    servicer.UserPrompt,
                    request_deserializer=SilaFluentController__pb2.UserPrompt_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.UserPrompt_Responses.SerializeToString,
            ),
            'GetTips': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTips,
                    request_deserializer=SilaFluentController__pb2.GetTips_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.GetTips_Responses.SerializeToString,
            ),
            'Aspirate': grpc.unary_unary_rpc_method_handler(
                    servicer.Aspirate,
                    request_deserializer=SilaFluentController__pb2.Aspirate_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.Aspirate_Responses.SerializeToString,
            ),
            'Dispense': grpc.unary_unary_rpc_method_handler(
                    servicer.Dispense,
                    request_deserializer=SilaFluentController__pb2.Dispense_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.Dispense_Responses.SerializeToString,
            ),
            'DropTips': grpc.unary_unary_rpc_method_handler(
                    servicer.DropTips,
                    request_deserializer=SilaFluentController__pb2.DropTips_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.DropTips_Responses.SerializeToString,
            ),
            'StartFluentOrAttach': grpc.unary_unary_rpc_method_handler(
                    servicer.StartFluentOrAttach,
                    request_deserializer=SilaFluentController__pb2.StartFluentOrAttach_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.StartFluentOrAttach_Responses.SerializeToString,
            ),
            'StartFluentAndLogin': grpc.unary_unary_rpc_method_handler(
                    servicer.StartFluentAndLogin,
                    request_deserializer=SilaFluentController__pb2.StartFluentAndLogin_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.StartFluentAndLogin_Responses.SerializeToString,
            ),
            'StartFluentInSimulationMode': grpc.unary_unary_rpc_method_handler(
                    servicer.StartFluentInSimulationMode,
                    request_deserializer=SilaFluentController__pb2.StartFluentInSimulationMode_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.StartFluentInSimulationMode_Responses.SerializeToString,
            ),
            'PrepareMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.PrepareMethod,
                    request_deserializer=SilaFluentController__pb2.PrepareMethod_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.PrepareMethod_Responses.SerializeToString,
            ),
            'RunMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.RunMethod,
                    request_deserializer=SilaFluentController__pb2.RunMethod_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.RunMethod_Responses.SerializeToString,
            ),
            'PauseRun': grpc.unary_unary_rpc_method_handler(
                    servicer.PauseRun,
                    request_deserializer=SilaFluentController__pb2.PauseRun_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.PauseRun_Responses.SerializeToString,
            ),
            'ResumeRun': grpc.unary_unary_rpc_method_handler(
                    servicer.ResumeRun,
                    request_deserializer=SilaFluentController__pb2.ResumeRun_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.ResumeRun_Responses.SerializeToString,
            ),
            'StopMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.StopMethod,
                    request_deserializer=SilaFluentController__pb2.StopMethod_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.StopMethod_Responses.SerializeToString,
            ),
            'FinishExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.FinishExecution,
                    request_deserializer=SilaFluentController__pb2.FinishExecution_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.FinishExecution_Responses.SerializeToString,
            ),
            'CloseMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseMethod,
                    request_deserializer=SilaFluentController__pb2.CloseMethod_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.CloseMethod_Responses.SerializeToString,
            ),
            'SetVariableValue': grpc.unary_unary_rpc_method_handler(
                    servicer.SetVariableValue,
                    request_deserializer=SilaFluentController__pb2.SetVariableValue_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.SetVariableValue_Responses.SerializeToString,
            ),
            'GetVariableNames': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVariableNames,
                    request_deserializer=SilaFluentController__pb2.GetVariableNames_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.GetVariableNames_Responses.SerializeToString,
            ),
            'GetVariableValue': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVariableValue,
                    request_deserializer=SilaFluentController__pb2.GetVariableValue_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.GetVariableValue_Responses.SerializeToString,
            ),
            'GetAllRunnableMethods': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllRunnableMethods,
                    request_deserializer=SilaFluentController__pb2.GetAllRunnableMethods_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.GetAllRunnableMethods_Responses.SerializeToString,
            ),
            'Shutdown': grpc.unary_unary_rpc_method_handler(
                    servicer.Shutdown,
                    request_deserializer=SilaFluentController__pb2.Shutdown_Parameters.FromString,
                    response_serializer=SilaFluentController__pb2.Shutdown_Responses.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SilaFluentController(object):
    """Feature: Fluent Service
    Denotes a service to remote-control FluentControl
    """

    @staticmethod
    def AddLabware(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/AddLabware',
            SilaFluentController__pb2.AddLabware_Parameters.SerializeToString,
            SilaFluentController__pb2.AddLabware_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveLabware(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/RemoveLabware',
            SilaFluentController__pb2.RemoveLabware_Parameters.SerializeToString,
            SilaFluentController__pb2.RemoveLabware_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetLocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/SetLocation',
            SilaFluentController__pb2.SetLocation_Parameters.SerializeToString,
            SilaFluentController__pb2.SetLocation_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Subroutine(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/Subroutine',
            SilaFluentController__pb2.Subroutine_Parameters.SerializeToString,
            SilaFluentController__pb2.Subroutine_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferLabware(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/TransferLabware',
            SilaFluentController__pb2.TransferLabware_Parameters.SerializeToString,
            SilaFluentController__pb2.TransferLabware_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferLabwareBackToBase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/TransferLabwareBackToBase',
            SilaFluentController__pb2.TransferLabwareBackToBase_Parameters.SerializeToString,
            SilaFluentController__pb2.TransferLabwareBackToBase_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GenericCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/GenericCommand',
            SilaFluentController__pb2.GenericCommand_Parameters.SerializeToString,
            SilaFluentController__pb2.GenericCommand_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFingers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/GetFingers',
            SilaFluentController__pb2.GetFingers_Parameters.SerializeToString,
            SilaFluentController__pb2.GetFingers_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DropFingers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/DropFingers',
            SilaFluentController__pb2.DropFingers_Parameters.SerializeToString,
            SilaFluentController__pb2.DropFingers_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UserPrompt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/UserPrompt',
            SilaFluentController__pb2.UserPrompt_Parameters.SerializeToString,
            SilaFluentController__pb2.UserPrompt_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTips(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/GetTips',
            SilaFluentController__pb2.GetTips_Parameters.SerializeToString,
            SilaFluentController__pb2.GetTips_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Aspirate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/Aspirate',
            SilaFluentController__pb2.Aspirate_Parameters.SerializeToString,
            SilaFluentController__pb2.Aspirate_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Dispense(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/Dispense',
            SilaFluentController__pb2.Dispense_Parameters.SerializeToString,
            SilaFluentController__pb2.Dispense_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DropTips(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/DropTips',
            SilaFluentController__pb2.DropTips_Parameters.SerializeToString,
            SilaFluentController__pb2.DropTips_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartFluentOrAttach(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/StartFluentOrAttach',
            SilaFluentController__pb2.StartFluentOrAttach_Parameters.SerializeToString,
            SilaFluentController__pb2.StartFluentOrAttach_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartFluentAndLogin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/StartFluentAndLogin',
            SilaFluentController__pb2.StartFluentAndLogin_Parameters.SerializeToString,
            SilaFluentController__pb2.StartFluentAndLogin_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartFluentInSimulationMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/StartFluentInSimulationMode',
            SilaFluentController__pb2.StartFluentInSimulationMode_Parameters.SerializeToString,
            SilaFluentController__pb2.StartFluentInSimulationMode_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PrepareMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/PrepareMethod',
            SilaFluentController__pb2.PrepareMethod_Parameters.SerializeToString,
            SilaFluentController__pb2.PrepareMethod_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/RunMethod',
            SilaFluentController__pb2.RunMethod_Parameters.SerializeToString,
            SilaFluentController__pb2.RunMethod_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PauseRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/PauseRun',
            SilaFluentController__pb2.PauseRun_Parameters.SerializeToString,
            SilaFluentController__pb2.PauseRun_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResumeRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/ResumeRun',
            SilaFluentController__pb2.ResumeRun_Parameters.SerializeToString,
            SilaFluentController__pb2.ResumeRun_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/StopMethod',
            SilaFluentController__pb2.StopMethod_Parameters.SerializeToString,
            SilaFluentController__pb2.StopMethod_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FinishExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/FinishExecution',
            SilaFluentController__pb2.FinishExecution_Parameters.SerializeToString,
            SilaFluentController__pb2.FinishExecution_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/CloseMethod',
            SilaFluentController__pb2.CloseMethod_Parameters.SerializeToString,
            SilaFluentController__pb2.CloseMethod_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetVariableValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/SetVariableValue',
            SilaFluentController__pb2.SetVariableValue_Parameters.SerializeToString,
            SilaFluentController__pb2.SetVariableValue_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVariableNames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/GetVariableNames',
            SilaFluentController__pb2.GetVariableNames_Parameters.SerializeToString,
            SilaFluentController__pb2.GetVariableNames_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVariableValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/GetVariableValue',
            SilaFluentController__pb2.GetVariableValue_Parameters.SerializeToString,
            SilaFluentController__pb2.GetVariableValue_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllRunnableMethods(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/GetAllRunnableMethods',
            SilaFluentController__pb2.GetAllRunnableMethods_Parameters.SerializeToString,
            SilaFluentController__pb2.GetAllRunnableMethods_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Shutdown(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.tecan.fluent.silafluentcontroller.v1.SilaFluentController/Shutdown',
            SilaFluentController__pb2.Shutdown_Parameters.SerializeToString,
            SilaFluentController__pb2.Shutdown_Responses.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
